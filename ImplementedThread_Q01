package Trabalho_SD;

class RacerImplemented implements Runnable {
	private Thread t;
	private String threadName;
	
	RacerImplemented (String name) {	
		threadName = name;
//		System.out.println("Creating " + threadName);
	}
	
	public void run() {
		//System.out.println("Running " + threadName);
		try {
//			while (true) {
			for(int i = 0; i < 1000; i++) {
				System.out.println("Racer: " + threadName + " - corrida " + (i +  1));
//				System.out.println("Racer: " + threadName + " - imprimindo");
				
				Thread.sleep(1000);
			}
		} catch(Exception e) {
			System.out.println("Thread " + threadName + " interrupted.");
		}
		//System.out.println("Thread "  +  threadName + " exiting.");
	}
	
	public void start() {
//		System.out.println("Starting " + threadName);
		if (t == null) {
			t = new Thread(this, threadName);
			t.start();
		}
	}
	
	public void setP(int priority) {
		try {
			t.setPriority(priority);
		} catch (Exception e) {
			System.out.println(e);
		}
	}
	
	public void joinThread() {
		try {
			t.join();
		} catch (Exception e) {
			System.out.println(e);
		}
	}
}

class Race {
	private int n_racers;
	private RacerImplemented[] racers;
	
	Race(int qtde_racers) {
		n_racers = qtde_racers;
	}

	public void createRacers() {
		try {
			racers = new RacerImplemented[n_racers];
			for (int i = 0; i < n_racers; i++) {
				racers[i] = new RacerImplemented("Racer " + (i + 1));
			}
		} catch (Exception e) {
			System.out.println(e);
		}
	}
	
	public void executeRace() {
		try {
//			for (int i = 0; i < n_racers; i++) {
//				racers[i].start();
//				racers[i].setP(i % 10 + 1);
//			}
			
			for (int i = 0; i < n_racers; i += 2) {
				racers[i].start();
			}
			
			for (int i = 0; i < n_racers; i += 2) {
				racers[i].joinThread();
			}
			
			for (int i = 1; i < n_racers; i += 2) {
				racers[i].start();
			}
			
			for (int i = 1; i < n_racers; i += 2) {
				racers[i].joinThread();
			}
			
		} catch (Exception e) {
			System.out.println(e);
		}
	}
}

public class ImplementedThread_Q01 {

	public static void main(String[] args) {
//		RacerImplemented racer = new RacerImplemented("01");
//		
//		racer.start();
		
		Race race = new Race(10);
		
		race.createRacers();
		race.executeRace();
	}
}
